name: Build apk for staging

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Use NodeJS v12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Decrypt Android keys
        run: sh ./.github/scripts/decrypt_android_staging_keys.sh
        env:
          STAGING_KEYSTORE: ${{ secrets.STAGING_KEYSTORE }}
          STAGING_KEYSTORE_PASSPHRASE: ${{ secrets.STAGING_KEYSTORE_PASSPHRASE }}

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Create env file
        run: |
          touch .env
          echo PAYMONGO_SECRET_KEY=${{ secrets.PAYMONGO_SECRET_KEY_LIVE }} >> .env
          echo API_KEY=${{ secrets.API_BASE_URL_STAGING }} >> .env
          echo GOOGLE_WEB_CLIENT_ID=${{ secrets.GOOGLE_WEB_CLIENT_ID_STAGING }} >> .env
          echo GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }} >> .env
          echo FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }} >> .env
          cat .env

      - name: Run yarn clean install
        run: IGNORE_SCRIPTS=1 yarn --frozen-lockfile

      - name: Generate services
        run: npm run generate:services:staging

      - name: Fix images
        run: npx react-native-fix-image

      - name: Run gradle clean
        working-directory: android
        run: ./gradlew clean --no-daemon

      - run: mkdir -p ./android/app/src/staging/assets
      - name: Compile android bundle
        run: APP_ENV=staging npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/staging/assets/index.android.bundle --assets-dest android/app/src/staging/res/

      - name: stop existing gradle daemon
        run: ./gradlew --stop
        working-directory: android

      - name: remove .gradle folder
        run: rm -rf ./gradle
        working-directory: android

      - name: Build android apk
        run: APP_ENV=staging ./gradlew :app:assembleStaging  --no-daemon
        working-directory: android

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: android-apk
          path: '**/*.apk'
